{
    "RuleId":  "4a999609-a936-441a-aa99-7e92970a0801\u0027)]",
    "DisplayName":  "TI map Domain entity to DnsEvents",
    "Description":  "Identifies a match in DnsEvents from any Domain IOC from TI",
    "Severity":  "Medium",
    "Enabled":  true,
    "Query":  "// Define the lookback periods for time-based filters\nlet dt_lookBack = 1h; // Look back 1 hour for DNS events\nlet ioc_lookBack = 14d; // Look back 14 days for threat intelligence indicators\n// Fetch threat intelligence indicators related to domains\nlet Domain_Indicators = ThreatIntelligenceIndicator\n  // Filter out indicators without domain names\n  | where isnotempty(DomainName)\n  | where TimeGenerated \u003e= ago(ioc_lookBack)\n  | summarize LatestIndicatorTime = arg_max(TimeGenerated, *) by IndicatorId\n  | where Active == true and ExpirationDateTime \u003e now()\n  | extend TI_DomainEntity = DomainName;\n// Create a list of TLDs in our threat feed for later validation\nlet maxListSize = 100000; // Define the maximum allowed size for each list\nlet list_tlds = Domain_Indicators\n  | extend parts = split(DomainName, \u0027.\u0027)\n  | extend tld = parts[(array_length(parts)-1)]\n  | summarize count() by tostring(tld)\n  | project tld\n  | summarize make_list(tld, maxListSize);\n// Perform a join between domain indicators and DNS events to identify potential malicious activity\nDomain_Indicators\n  // Use innerunique to keep performance fast and result set low, as we only need one match to indicate potential malicious activity that needs investigation\n  | join kind=innerunique (\n    DnsEvents\n    | where TimeGenerated \u003e ago(dt_lookBack)\n    // Extract domain patterns from syslog message\n    | where isnotempty(Name)\n    | extend parts = split(Name, \u0027.\u0027)\n    | extend tld = parts[(array_length(parts)-1)]\n    // Validate parsed domain by checking if the TLD is in the list of TLDs in our threat feed\n    | where tld in~ (list_tlds)\n    | extend DNS_TimeGenerated = TimeGenerated\n  ) on $left.TI_DomainEntity==$right.Name\n  // Filter out DNS events that occurred after the expiration of the corresponding indicator\n  | where DNS_TimeGenerated \u003c ExpirationDateTime\n  // Group the results by IndicatorId and Name, and keep the DNS event with the latest timestamp\n  | summarize DNS_TimeGenerated = arg_max(DNS_TimeGenerated, *) by IndicatorId, Name\n  // Select the desired output fields\n  | project DNS_TimeGenerated, Description, ActivityGroupNames, IndicatorId, ThreatType, ExpirationDateTime, ConfidenceScore, Url, Computer, ClientIP, Name, QueryType, Type, TI_DomainEntity\n  // Extract hostname and DNS domain from the Computer field\n  | extend HostName = tostring(split(Computer, \u0027.\u0027, 0)[0]), DnsDomain = tostring(strcat_array(array_slice(split(Computer, \u0027.\u0027), 1, -1), \u0027.\u0027))\n  // Rename the timestamp field\n  | extend timestamp = DNS_TimeGenerated\n",
    "QueryFrequency":  "PT1H",
    "QueryPeriod":  "P14D",
    "TriggerOperator":  "GreaterThan",
    "TriggerThreshold":  0,
    "SuppressionDuration":  "PT1H",
    "SuppressionEnabled":  false,
    "Tactics":  [
                    "CommandAndControl"
                ],
    "Techniques":  [
                       "T1071"
                   ],
    "SubTechniques":  [

                      ],
    "AlertRuleTemplateName":  "85aca4d1-5d15-4001-abd9-acb86ca1786a",
    "TemplateVersion":  "1.4.3",
    "EntityMappings":  [
                           {
                               "entityType":  "Host",
                               "fieldMappings":  [
                                                     {
                                                         "identifier":  "FullName",
                                                         "columnName":  "Computer"
                                                     },
                                                     {
                                                         "identifier":  "HostName",
                                                         "columnName":  "HostName"
                                                     },
                                                     {
                                                         "identifier":  "DnsDomain",
                                                         "columnName":  "DnsDomain"
                                                     }
                                                 ]
                           },
                           {
                               "entityType":  "IP",
                               "fieldMappings":  [
                                                     {
                                                         "identifier":  "Address",
                                                         "columnName":  "ClientIP"
                                                     }
                                                 ]
                           },
                           {
                               "entityType":  "URL",
                               "fieldMappings":  [
                                                     {
                                                         "identifier":  "Url",
                                                         "columnName":  "Url"
                                                     }
                                                 ]
                           }
                       ],
    "CustomDetails":  null,
    "IncidentConfiguration":  {
                                  "createIncident":  true,
                                  "groupingConfiguration":  {
                                                                "enabled":  false,
                                                                "reopenClosedIncident":  false,
                                                                "lookbackDuration":  "PT5H",
                                                                "matchingMethod":  "AllEntities",
                                                                "groupByEntities":  [

                                                                                    ],
                                                                "groupByAlertDetails":  [

                                                                                        ],
                                                                "groupByCustomDetails":  [

                                                                                         ]
                                                            }
                              },
    "EventGroupingSettings":  {
                                  "aggregationKind":  "SingleAlert"
                              },
    "Kind":  "Scheduled",
    "ApiVersion":  "2023-12-01-preview",
    "SourceFile":  "Azure_Sentinel_analytics_rules (12).json",
    "VersionHistory":  [
                           {
                               "Date":  "2025-05-22 16:19:21",
                               "Version":  "1.0",
                               "Action":  "Created",
                               "Changes":  [

                                           ],
                               "UpdatedBy":  "NoahBournes"
                           }
                       ],
    "LastUpdated":  "2025-05-22 16:19:21",
    "CurrentVersion":  "1.0",
    "OriginTenant":  "Crisk"
}

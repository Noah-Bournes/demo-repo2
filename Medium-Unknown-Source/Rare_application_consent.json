{
    "RuleId":  "a558b31b-64b7-43e6-944d-ecad14a620ec\u0027)]",
    "DisplayName":  "Rare application consent",
    "Description":  "This will alert when the \"Consent to application\" operation occurs by a user that has not done this operation before or rarely does this.\nThis could indicate that permissions to access the listed Azure App were provided to a malicious actor. \nConsent to application, Add service principal and Add OAuth2PermissionGrant should typically be rare events. \nThis may help detect the Oauth2 attack that can be initiated by this publicly available tool - https://github.com/fireeye/PwnAuth\nFor further information on AuditLogs please see https://docs.microsoft.com/azure/active-directory/reports-monitoring/reference-audit-activities.",
    "Severity":  "Medium",
    "Enabled":  true,
    "Query":  "\nlet current = 1d;\nlet auditLookback = 7d;\n// Setting threshold to 3 as a default, change as needed.  \n// Any operation that has been initiated by a user or app more than 3 times in the past 7 days will be excluded\nlet threshold = 3;\n// Gather initial data from lookback period, excluding current, adjust current to more than a single day if no results\nlet AuditTrail = AuditLogs | where TimeGenerated \u003e= ago(auditLookback) and TimeGenerated \u003c ago(current)\n// 2 other operations that can be part of malicious activity in this situation are \n// \"Add OAuth2PermissionGrant\" and \"Add service principal\", extend the filter below to capture these too\n| where OperationName has \"Consent to application\"\n| extend InitiatedBy = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \ntostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\n| extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\n| summarize max(TimeGenerated), OperationCount = count() by OperationName, InitiatedBy, TargetResourceName\n// only including operations by initiated by a user or app that is above the threshold so we produce only rare and has not occurred in last 7 days\n| where OperationCount \u003e threshold\n;\n// Gather current period of audit data\nlet RecentConsent = AuditLogs | where TimeGenerated \u003e= ago(current)\n| where OperationName has \"Consent to application\"\n| extend IpAddress = case(\nisnotempty(tostring(parse_json(tostring(InitiatedBy.user)).ipAddress)) and tostring(parse_json(tostring(InitiatedBy.user)).ipAddress) != \u0027null\u0027, tostring(parse_json(tostring(InitiatedBy.user)).ipAddress), \nisnotempty(tostring(parse_json(tostring(InitiatedBy.app)).ipAddress)) and tostring(parse_json(tostring(InitiatedBy.app)).ipAddress) != \u0027null\u0027, tostring(parse_json(tostring(InitiatedBy.app)).ipAddress),\n\u0027Not Available\u0027)\n| extend InitiatedBy = iff(isnotempty(tostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName)), \ntostring(parse_json(tostring(InitiatedBy.user)).userPrincipalName), tostring(parse_json(tostring(InitiatedBy.app)).displayName))\n| extend TargetResourceName = tolower(tostring(TargetResources.[0].displayName))\n| parse TargetResources.[0].modifiedProperties with * \"ConsentType: \" ConsentType \"]\" *\n| mv-expand AdditionalDetails\n| extend UserAgent = iff(AdditionalDetails.key == \"User-Agent\",tostring(AdditionalDetails.value),\"\")\n| project TimeGenerated, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, ConsentType, UserAgent, CorrelationId, Type;\n// Exclude previously seen audit activity for \"Consent to application\" that was seen in the lookback period\n// First for rare InitiatedBy\nlet RareConsentBy = RecentConsent | join kind= leftanti AuditTrail on OperationName, InitiatedBy \n| extend Reason = \"Previously unseen user consenting\";\n// Second for rare TargetResourceName\nlet RareConsentApp = RecentConsent | join kind= leftanti AuditTrail on OperationName, TargetResourceName\n| extend Reason = \"Previously unseen app granted consent\";\nRareConsentBy | union RareConsentApp\n| summarize Reason = makeset(Reason) by TimeGenerated, InitiatedBy, IpAddress, TargetResourceName, Category, OperationName, ConsentType, UserAgent, CorrelationId, Type\n| extend timestamp = TimeGenerated, AccountCustomEntity = InitiatedBy, HostCustomEntity = TargetResourceName, IPCustomEntity = IpAddress\n",
    "QueryFrequency":  "P1D",
    "QueryPeriod":  "P7D",
    "TriggerOperator":  "GreaterThan",
    "TriggerThreshold":  3,
    "SuppressionDuration":  "PT5H",
    "SuppressionEnabled":  false,
    "Tactics":  [
                    "Persistence",
                    "PrivilegeEscalation"
                ],
    "Techniques":  [

                   ],
    "SubTechniques":  [

                      ],
    "AlertRuleTemplateName":  "83ba3057-9ea3-4759-bf6a-933f2e5bc7ee",
    "TemplateVersion":  null,
    "EntityMappings":  null,
    "CustomDetails":  null,
    "IncidentConfiguration":  {
                                  "createIncident":  true,
                                  "groupingConfiguration":  {
                                                                "enabled":  false,
                                                                "reopenClosedIncident":  false,
                                                                "lookbackDuration":  "PT5M",
                                                                "matchingMethod":  "AllEntities",
                                                                "groupByEntities":  [

                                                                                    ],
                                                                "groupByAlertDetails":  null,
                                                                "groupByCustomDetails":  null
                                                            }
                              },
    "EventGroupingSettings":  {
                                  "aggregationKind":  "SingleAlert"
                              },
    "Kind":  "Scheduled",
    "ApiVersion":  "2023-12-01-preview",
    "SourceFile":  "Azure_Sentinel_analytics_rules (2).json",
    "VersionHistory":  [
                           {
                               "Date":  "2025-05-22 16:19:25",
                               "Version":  "1.0",
                               "Action":  "Created",
                               "Changes":  [

                                           ],
                               "UpdatedBy":  "NoahBournes"
                           }
                       ],
    "LastUpdated":  "2025-05-22 16:19:25",
    "CurrentVersion":  "1.0",
    "OriginTenant":  "Crisk"
}
